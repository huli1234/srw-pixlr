{"version":3,"sources":["webpack:///srw-pixlr.js","webpack:///webpack/bootstrap 3d67b8fa8adbe4973366","webpack:///./pixel.js","webpack:///./seerow-reader.js","webpack:///./imageReader.js","webpack:///./srw-rdr.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","Pixel","x","y","borderSize","size","color","drawCircles","this","distanceToTarget","xDistance","Math","abs","yDistance","targetContext","duration","_this","Promise","resolve","reject","randomDuration","random","setTimeout","clearRect","_this2","drawOnCanvas","fillStyle","beginPath","arc","PI","closePath","fill","fillRect","default","SeerowReader","undefined","_pixel","_imageReader","currentImageIndex","currentPixels","currentPixelArray","isFinished","resolution","imageReader","ImageReader","targetCanvasList","document","querySelectorAll","targetContextList","forEach","el","push","getContext","SPEED","images","getElementsByClassName","backgroundColor","pixelColor","maxDistance","ledMode","options","arguments","selector","width","height","speed","hexToRgb","backgroundOpacity","circle","setOptions","context","r","g","b","_this3","fillCanvas","targetPixelMap","image","getPixels","targetPixels","createPixels","pixel","pixelSize","drawings","ctx","drawLed","all","then","catch","mapPixels","movePixels","_this4","globalAlpha","hidePixels","currentPixel","hide","console","log","showPixels","targetPixel","promise","show","pixels","_this5","roundFinished","moveToTarget","isSame","_this6","missingPixels","element","floor","randomNumber","splice","configureTarget","pop","setRandomSteps","draw","_this7","Error","hex","replace","result","exec","parseInt","canv","createElement","id","style","cssText","body","appendChild","crossOrigin","drawImage","imageData","getImageData","newPixels","data","imagePixels","newPixel","_seerowReader","window","SrwPixelDrawer","create","reader","changeImage","setNewImage"],"mappings":"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","file":"srw-pixlr.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Pixel = exports.Pixel = function () {\n    function Pixel(x, y, borderSize, size, color, drawCircles) {\n        _classCallCheck(this, Pixel);\n\n        this.x = x;\n        this.y = y;\n        this.target = null;\n        this.size = size;\n        this.color = color;\n        this.drawCircles = drawCircles;\n        this.distanceToTarget = 0;\n        this.borderSize = borderSize;\n    }\n\n    _createClass(Pixel, [{\n        key: \"configureTarget\",\n        value: function configureTarget(target) {\n            this.target = target;\n\n            var xDistance = Math.abs(this.x - this.target.x);\n            var yDistance = Math.abs(this.y - this.target.y);\n\n            if (xDistance > yDistance) {\n                this.distanceToTarget = xDistance;\n            } else {\n                this.distanceToTarget = yDistance;\n            }\n        }\n    }, {\n        key: \"hide\",\n        value: function hide(targetContext, duration) {\n            var _this = this;\n\n            return new Promise(function (resolve, reject) {\n                var randomDuration = Math.random() * duration;\n                setTimeout(function () {\n                    targetContext.clearRect(_this.x * _this.size.x + _this.borderSize / 2, _this.y * _this.size.y + _this.borderSize / 2, _this.size.x - _this.borderSize, _this.size.y - _this.borderSize);\n                    resolve();\n                }, randomDuration);\n            });\n        }\n    }, {\n        key: \"show\",\n        value: function show(resolve, targetContext, duration) {\n            var _this2 = this;\n\n            var randomDuration = Math.random() * duration;\n            setTimeout(function () {\n                _this2.drawOnCanvas(targetContext);\n                resolve();\n            }, randomDuration);\n        }\n    }, {\n        key: \"moveToTarget\",\n        value: function moveToTarget() {\n            if (this.x < this.target.x) {\n                this.x = this.x + 1;\n            } else if (this.x > this.target.x) {\n                this.x = this.x - 1;\n            }\n\n            if (this.y < this.target.y) {\n                this.y = this.y + 1;\n            } else if (this.y > this.target.y) {\n                this.y = this.y - 1;\n            }\n        }\n    }, {\n        key: \"drawOnCanvas\",\n        value: function drawOnCanvas(targetContext) {\n            targetContext.fillStyle = this.color;\n            if (!this.drawCircles) {\n                targetContext.fillRect(this.x * this.size.x + this.borderSize / 2, this.y * this.size.y + this.borderSize / 2, this.size.x - this.borderSize, this.size.y - this.borderSize);\n            } else {\n                targetContext.beginPath();\n                targetContext.arc(this.x * this.size.x, this.y * this.size.y, (this.size.x - 1) / 2, 0, 2 * Math.PI, false);\n                targetContext.closePath();\n                targetContext.fill();\n            }\n        }\n    }, {\n        key: \"isSame\",\n        value: function isSame() {\n            return this.x === this.target.x && this.y === this.target.y;\n        }\n    }]);\n\n    return Pixel;\n}();\n\nexports.default = Pixel;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SeerowReader = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _pixel = __webpack_require__(0);\n\nvar _imageReader = __webpack_require__(2);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SeerowReader = exports.SeerowReader = function () {\n    function SeerowReader() {\n        var _this = this;\n\n        _classCallCheck(this, SeerowReader);\n\n        this.currentImageIndex = 0;\n        this.currentPixels = [];\n        this.currentPixelArray = [];\n        this.isFinished = false;\n        this.resolution = { x: 32, y: 32 };\n        this.imageReader = new _imageReader.ImageReader(this.resolution.x * 10, this.resolution.y * 10);\n        this.targetCanvasList = document.querySelectorAll(\"srw-pxl-drwr-targetcanvas\");\n        this.targetContextList = [];\n\n        if (this.targetCanvasList) {\n            this.targetCanvasList.forEach(function (el) {\n                _this.targetContextList.push(el.getContext(\"2d\"));\n            });\n        }\n        this.SPEED = 50;\n        this.images = document.getElementsByClassName('srw-img-rdr-src');\n        this.backgroundColor = '#2bfeba';\n        this.pixelColor = '#0b0b0b';\n        this.fill = false;\n        this.drawCircles = false;\n        this.maxDistance = 0;\n        this.ledMode = false;\n        this.duration = 2000;\n        this.borderSize = 2;\n    }\n\n    /**\n     * Configuring all options\n     * \n     */\n\n\n    _createClass(SeerowReader, [{\n        key: 'setOptions',\n        value: function setOptions() {\n            var _this2 = this;\n\n            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\n            if (options.selector) {\n                this.targetCanvasList = document.querySelectorAll(options.selector);\n                if (this.targetCanvasList) {\n                    this.targetCanvasList.forEach(function (el) {\n                        _this2.targetContextList.push(el.getContext(\"2d\"));\n                    });\n                }\n            }\n\n            if (options.width && options.height) {\n                this.targetCanvasList.forEach(function (el) {\n                    el.width = options.width;\n                    el.height = options.height;\n                });\n            }\n\n            if (options.resolution && options.resolution.x && options.resolution.y) {\n                this.resolution = options.resolution;\n            }\n\n            if (options.speed) {\n                this.SPEED = options.speed;\n            }\n\n            if (options.pixelColor) {\n                this.pixelColor = options.pixelColor;\n            }\n\n            if (options.backgroundColor) {\n                this.backgroundColor = this.hexToRgb(options.backgroundColor);\n            }\n\n            if (options.backgroundOpacity) {\n                this.backgroundOpacity = options.backgroundOpacity;\n            } else {\n                this.backgroundOpacity = 1;\n            }\n\n            if (options.fill) {\n                this.fill = options.fill;\n            }\n\n            if (options.circle) {\n                this.drawCircles = options.circle;\n            }\n\n            if (options.ledMode) {\n                this.ledMode = options.ledMode;\n            }\n\n            if (options.borderSize) {\n                this.borderSize = options.borderSize;\n            }\n\n            if (options.duration) {\n                this.duration = options.duration;\n            }\n\n            this.imageReader.setOptions(options);\n        }\n\n        /**\n         * Fills the hole canvas with the background color\n         */\n\n    }, {\n        key: 'fillCanvas',\n        value: function fillCanvas(context) {\n            context.fillStyle = \"rgba(\" + this.backgroundColor.r + \",\" + this.backgroundColor.g + \",\" + this.backgroundColor.b + \",\" + this.backgroundOpacity + \")\";\n            if (!this.drawCircles) {\n                for (var x = 0; x <= this.resolution.x; x++) {\n                    for (var y = 0; y <= this.resolution.y; y++) {\n                        context.clearRect(this.x * this.size.x + this.borderSize / 2, this.y * this.size.y + this.borderSize / 2, this.size.x - this.borderSize, this.size.y - this.borderSize);\n                    }\n                }\n            } else if (this.drawCircles) {\n                context.fillRect(0, 0, this.targetCanvasList.width, this.targetCanvasList.height);\n            }\n        }\n\n        /**\n         *\n         * @returns {Promise}\n         */\n\n    }, {\n        key: 'draw',\n        value: function draw() {\n            var _this3 = this;\n\n            return new Promise(function (resolve, reject) {\n                if (!_this3.ledMode) {\n                    _this3.targetCanvasList.forEach(function (context) {\n                        context.clearRect(0, 0, _this3.targetCanvasList.width, _this3.targetCanvasList.height);\n                        _this3.fillCanvas(context);\n                        context.fillStyle = _this3.pixelColor;\n                    });\n                }\n\n                var targetPixelMap = void 0;\n\n                if (_this3.currentPixelArray.length > 0) {\n                    targetPixelMap = _this3.currentPixelArray;\n                }\n\n                if (!targetPixelMap) {\n                    var image = _this3.images[_this3.currentImageIndex];\n                    targetPixelMap = _this3.imageReader.getPixels(image);\n                }\n\n                var targetPixels = _this3.imageReader.createPixels(targetPixelMap);\n\n                targetPixels.forEach(function (pixel) {\n                    pixel.size = _this3.pixelSize();\n                    pixel.color = _this3.pixelColor;\n                    pixel.drawCircles = _this3.drawCircles;\n                    pixel.borderSize = _this3.borderSize;\n                });\n                if (_this3.currentPixels.length > 0) {\n                    if (_this3.ledMode) {\n                        var drawings = [];\n                        _this3.targetContextList.forEach(function (ctx) {\n                            drawings.push(_this3.drawLed(ctx, targetPixels));\n                        });\n                        Promise.all(drawings).then(function () {\n                            _this3.currentPixels = targetPixels;\n                            resolve();\n                        }).catch();\n                    } else {\n                        _this3.mapPixels(targetPixels, _this3.targetContextList);\n                        _this3.movePixels(_this3.currentPixels, _this3.targetContextList).then(function () {\n                            resolve();\n                        });\n                    }\n                } else {\n                    _this3.targetContextList.forEach(function (ctx) {\n                        _this3.drawOnCanvas(targetPixels, ctx);\n                    });\n                }\n            });\n        }\n    }, {\n        key: 'drawLed',\n        value: function drawLed(context, targetPixels) {\n            var _this4 = this;\n\n            return new Promise(function (resolve, reject) {\n                context.globalAlpha = 0;\n                var hidePixels = [];\n\n                _this4.currentPixels.forEach(function (currentPixel) {\n                    hidePixels.push(currentPixel.hide(context, _this4.duration / 2));\n                });\n\n                Promise.all(hidePixels).then(function () {\n                    console.log(\"hidden all pixels\");\n                    context.globalAlpha = 1;\n                    var showPixels = [];\n                    targetPixels.forEach(function (targetPixel) {\n                        var promise = new Promise(function (resolve, reject) {\n                            targetPixel.show(resolve, context, _this4.duration / 2);\n                        });\n                        showPixels.push(promise);\n                    });\n                    Promise.all(showPixels).then(function () {\n                        resolve();\n                    });\n                });\n            });\n        }\n    }, {\n        key: 'movePixels',\n        value: function movePixels(pixels, targetContext) {\n            var _this5 = this;\n\n            return new Promise(function (resolve, reject) {\n                if (!_this5.isFinished) {\n                    var roundFinished = true;\n                    pixels.forEach(function (currentPixel) {\n                        currentPixel.moveToTarget();\n                        if (!currentPixel.isSame()) {\n                            roundFinished = false;\n                        }\n                    });\n\n                    _this5.isFinished = roundFinished;\n                    targetContext.fillStyle = \"rgba(\" + _this5.backgroundColor.r + \",\" + _this5.backgroundColor.g + \",\" + _this5.backgroundColor.b + \",\" + _this5.backgroundOpacity + \")\";\n\n                    _this5.fillCanvas(targetContext);\n\n                    pixels.forEach(function (currentPixel) {\n                        currentPixel.drawOnCanvas(targetContext);\n                    });\n\n                    if (!_this5.isFinished) {\n                        setTimeout(function () {\n                            _this5.movePixels(pixels, targetContext);\n                            resolve();\n                        }, _this5.SPEED);\n                    } else {\n                        resolve();\n                    }\n                }\n            });\n        }\n    }, {\n        key: 'drawOnCanvas',\n        value: function drawOnCanvas(pixels, targetContext) {\n            this.currentPixels = pixels;\n            pixels.forEach(function (pixel) {\n                pixel.drawOnCanvas(targetContext);\n            });\n        }\n\n        /**\n         * Setup the new starting state, with exactly as many pixels as the target Image needs.\n         * \n         */\n\n    }, {\n        key: 'mapPixels',\n        value: function mapPixels(targetPixels) {\n            var _this6 = this;\n\n            var missingPixels = targetPixels.length - this.currentPixels.length;\n\n            if (missingPixels > 0) {\n                for (var i = 0; i < missingPixels; i++) {\n                    var element = this.currentPixels[Math.floor(Math.random() * this.currentPixels.length)];\n                    var pixel = new _pixel.Pixel(element.x, element.y, this.borderSize, this.pixelSize(), this.pixelColor, this.drawCircles);\n                    this.currentPixels.push(pixel);\n                }\n            } else if (missingPixels < 0) {\n                for (var _i = missingPixels; _i < 0; _i++) {\n                    var randomNumber = Math.floor(Math.random() * (this.currentPixels.length - 1));\n                    this.currentPixels.splice(randomNumber, 1)[0];\n                }\n            }\n\n            this.currentPixels.forEach(function (currentPixel) {\n                currentPixel.configureTarget(targetPixels.pop());\n            });\n\n            this.currentPixels.forEach(function (currentPixel) {\n                if (currentPixel.distanceToTarget > _this6.maxDistance) {\n                    _this6.maxDistance = currentPixel.distanceToTarget;\n                }\n            });\n\n            this.currentPixels.forEach(function (currentPixel) {\n                currentPixel.setRandomSteps(_this6.maxDistance);\n            });\n        }\n\n        /**\n         * Increase the current ImageIndex, go to 0 if higher then length of IMAGES Array\n         * \n         */\n\n    }, {\n        key: 'changeImage',\n        value: function changeImage() {\n\n            this.isFinished = false;\n            this.currentImageIndex++;\n            if (this.currentImageIndex >= this.images.length) {\n                this.currentImageIndex = 0;\n            }\n            return this.draw();\n        }\n    }, {\n        key: 'setNewImage',\n        value: function setNewImage(image) {\n            var _this7 = this;\n\n            return new Promise(function (resolve, reject) {\n                if (image.length != _this7.resolution.x && image[0].length != _this7.resolution.y) {\n                    reject(new Error(\"provided array doesnt match resolution of drwr\"));\n                } else {\n                    _this7.currentPixelArray = image;\n                    _this7.draw().then(function () {\n                        return resolve();\n                    });\n                }\n            });\n        }\n    }, {\n        key: 'pixelSize',\n        value: function pixelSize() {\n            return {\n                x: Math.floor(this.targetCanvasList[0].width / this.resolution.x),\n                y: Math.floor(this.targetCanvasList[0].height / this.resolution.y)\n            };\n        }\n    }, {\n        key: 'hexToRgb',\n        value: function hexToRgb(hex) {\n            // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n            var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n            hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n                return r + r + g + g + b + b;\n            });\n\n            var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n            return result ? {\n                r: parseInt(result[1], 16),\n                g: parseInt(result[2], 16),\n                b: parseInt(result[3], 16)\n            } : null;\n        }\n    }]);\n\n    return SeerowReader;\n}();\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ImageReader = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _pixel = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ImageReader = exports.ImageReader = function () {\n    function ImageReader() {\n        _classCallCheck(this, ImageReader);\n\n        this.resolution = { x: 32, y: 32 };\n        this.canv = document.createElement('canvas');\n        this.context = this.canv.getContext('2d');\n        this.context.clearRect(0, 0, this.resolution.x * 10, this.resolution.y * 10);\n        this.canv.id = 'srw-img-canvas';\n        this.canv.style.cssText = 'display:none';\n        document.body.appendChild(this.canv);\n    }\n\n    _createClass(ImageReader, [{\n        key: 'setOptions',\n        value: function setOptions() {\n            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\n            if (options.resolution && options.resolution.x && options.resolution.y) {\n                this.resolution = options.resolution;\n            }\n\n            if (options.fill) {\n                this.fill = options.fill;\n            }\n        }\n    }, {\n        key: 'getPixels',\n        value: function getPixels(image) {\n\n            this.context.clearRect(0, 0, this.resolution.x * 10, this.resolution.y * 10);\n            image.crossOrigin = \"Anonymous\";\n            this.context.drawImage(image, 0, 0, this.resolution.x, this.resolution.y);\n            var imageData = this.context.getImageData(0, 0, this.resolution.x, this.resolution.y);\n            var pixels = [];\n            var newPixels = [];\n\n            for (var i = 0; i <= this.resolution.x; i++) {\n                pixels.push([]);\n            }\n            for (var _i = 0; _i <= this.resolution.y; _i++) {\n                newPixels.push([]);\n            }\n\n            for (var _i2 = 0; _i2 < imageData.data.length; _i2 += 4) {\n\n                var y = Math.floor(_i2 / (4 * this.resolution.y));\n                var x = 0;\n\n                if (y > 0) {\n                    x = Math.floor(_i2 / 4 % (y * this.resolution.x));\n                } else {\n                    x = _i2 / 4;\n                }\n\n                if (imageData.data[_i2 + 3] > 150) {\n                    pixels[x][y] = 1;\n                } else {\n                    pixels[x][y] = 0;\n                }\n            }\n            return pixels;\n        }\n    }, {\n        key: 'createPixels',\n        value: function createPixels(pixels) {\n\n            var imagePixels = [];\n            for (var x = 0; x < pixels.length; x++) {\n                for (var y = 0; y < pixels[x].length; y++) {\n                    if (!this.fill) {\n                        if (x + 2 >= pixels.length) {\n                            newPixels[x][y] = 0;\n                        } else if (x === 0) {\n                            newPixels[x][y] = 0;\n                        } else if (y === 0) {\n                            newPixels[x][y] = 0;\n                        } else if (y + 2 >= pixels[x].length) {\n                            newPixels[x][y] = 0;\n                        } else if (pixels[x][y] === 1 && (pixels[x - 1][y] === 0 || pixels[x + 1][y] === 0 || pixels[x][y + 1] === 0 || pixels[x][y - 1] === 0)) {\n                            var newPixel = new _pixel.Pixel(x, y);\n                            imagePixels.push(newPixel);\n                        } else {\n                            newPixels[x][y] = 0;\n                        }\n                    } else if (pixels[x][y] === 1) {\n                        var newPixel = new _pixel.Pixel(x, y);\n                        imagePixels.push(newPixel);\n                    }\n                }\n            }\n            return imagePixels;\n        }\n    }]);\n\n    return ImageReader;\n}();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _seerowReader = __webpack_require__(1);\n\n(function (window) {\n\n    'use strict';\n\n    function define_library() {\n        var SrwPixelDrawer = {};\n\n        SrwPixelDrawer.create = function (options) {\n\n            var instance = {};\n\n            var reader = new _seerowReader.SeerowReader();\n            reader.setOptions(options);\n\n            instance.options = function (options) {\n                reader.setOptions(options);\n            };\n            instance.draw = function () {\n                reader.draw();\n            };\n            instance.changeImage = function () {\n                return reader.changeImage();\n            };\n            instance.setNewImage = function (image) {\n                return reader.setNewImage(image);\n            };\n            return instance;\n        };\n\n        return SrwPixelDrawer;\n    }\n    //define globally if it doesn't already exist\n    if (typeof SrwPixelDrawer === 'undefined') {\n        window.SrwPixelDrawer = define_library();\n    } else {\n        console.log(\"SrwPixelDrawer already defined.\");\n    }\n})(window);\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// srw-pixlr.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3d67b8fa8adbe4973366","export class Pixel {\n    \n    constructor(x, y, borderSize, size, color, drawCircles) {\n        this.x = x;\n        this.y = y;\n        this.target = null;\n        this.size = size;\n        this.color = color;\n        this.drawCircles = drawCircles;\n        this.distanceToTarget = 0;\n        this.borderSize = borderSize;\n    }\n\n    configureTarget(target) {\n        this.target = target;\n\n        var xDistance = Math.abs(this.x - this.target.x);\n        var yDistance = Math.abs(this.y - this.target.y);\n\n        if(xDistance > yDistance) {\n            this.distanceToTarget = xDistance;\n        } else {\n            this.distanceToTarget = yDistance;\n        }\n    }\n\n    hide(targetContext, duration) {\n        return new Promise((resolve, reject) => {\n            let randomDuration = Math.random() * duration;\n            setTimeout(() => {\n                targetContext.clearRect((this.x * this.size.x) + this.borderSize / 2, (this.y * this.size.y) + this.borderSize / 2, this.size.x - this.borderSize, this.size.y - this.borderSize);\n                resolve();\n            }, randomDuration);\n        })\n\n    }\n\n    show(resolve, targetContext, duration) {\n        let randomDuration = Math.random() * duration;\n        setTimeout(() => {\n            this.drawOnCanvas(targetContext);\n            resolve();\n        }, randomDuration);\n    }\n\n    moveToTarget() {\n        if(this.x < this.target.x) {\n            this.x = this.x + 1;\n        } else if(this.x > this.target.x) {\n            this.x = this.x - 1;\n        }\n\n        if(this.y < this.target.y) {\n            this.y = this.y + 1;\n        } else if(this.y > this.target.y) {\n            this.y = this.y - 1;\n        }\n    }\n\n    drawOnCanvas(targetContext) {\n        targetContext.fillStyle = this.color;\n        if(!this.drawCircles) {\n            targetContext.fillRect((this.x * this.size.x) + this.borderSize / 2, (this.y * this.size.y) + this.borderSize / 2, this.size.x - this.borderSize, this.size.y - this.borderSize);\n        } else {\n            targetContext.beginPath();\n            targetContext.arc(this.x * this.size.x, this.y * this.size.y, (this.size.x - 1) / 2, 0, 2 * Math.PI, false);\n            targetContext.closePath();\n            targetContext.fill();\n        }\n    }\n\n    isSame() {\n        return (this.x === this.target.x && this.y === this.target.y);\n    }\n\n\n}\n\nexport default Pixel;\n\n\n// WEBPACK FOOTER //\n// ./pixel.js","import { Pixel } from './pixel';\nimport { ImageReader } from './imageReader';\n\nexport class SeerowReader {\n\n\n    constructor() {\n        this.currentImageIndex = 0;\n        this.currentPixels = [];\n        this.currentPixelArray = [];\n        this.isFinished = false;\n        this.resolution = { x : 32, y : 32 };\n        this.imageReader = new ImageReader(this.resolution.x * 10, this.resolution.y * 10);\n        this.targetCanvasList = document.querySelectorAll(\"srw-pxl-drwr-targetcanvas\");\n        this.targetContextList = [];\n\n        if(this.targetCanvasList) {\n            this.targetCanvasList.forEach(el => {\n                this.targetContextList.push(el.getContext(\"2d\"));\n            });\n        }\n        this.SPEED = 50;\n        this.images = document.getElementsByClassName('srw-img-rdr-src');\n        this.backgroundColor = '#2bfeba';\n        this.pixelColor = '#0b0b0b';\n        this.fill = false;\n        this.drawCircles = false;\n        this.maxDistance = 0;\n        this.ledMode = false;\n        this.duration = 2000;\n        this.borderSize = 2;\n    }\n    \n    /**\n     * Configuring all options\n     * \n     */\n    setOptions(options = {}) {\n\n        if(options.selector) {\n            this.targetCanvasList = document.querySelectorAll(options.selector);\n            if(this.targetCanvasList) {\n                this.targetCanvasList.forEach(el => {\n                    this.targetContextList.push(el.getContext(\"2d\"));\n                });\n            }\n        }\n\n        if(options.width && options.height) {\n            this.targetCanvasList.forEach(el => {\n                el.width = options.width;\n                el.height = options.height;\n            });\n        }\n\n        if(options.resolution && options.resolution.x &&  options.resolution.y) {\n            this.resolution = options.resolution;\n        }\n\n        if(options.speed) {\n            this.SPEED = options.speed;\n        }\n\n        if(options.pixelColor) {\n            this.pixelColor = options.pixelColor;\n        }\n\n        if(options.backgroundColor) {\n            this.backgroundColor = this.hexToRgb(options.backgroundColor);\n        }\n\n        if(options.backgroundOpacity ) {\n            this.backgroundOpacity = options.backgroundOpacity;\n        } else {\n            this.backgroundOpacity = 1;\n        }\n\n        if(options.fill) {\n            this.fill = options.fill;\n        }\n\n        if(options.circle) {\n            this.drawCircles = options.circle;\n        }\n\n        if(options.ledMode) {\n            this.ledMode = options.ledMode;\n        }\n\n        if(options.borderSize) {\n            this.borderSize = options.borderSize;\n        }\n\n        if(options.duration) {\n            this.duration = options.duration;\n        }\n\n        this.imageReader.setOptions(options);\n    }\n\n    /**\n     * Fills the hole canvas with the background color\n     */\n    fillCanvas(context) {\n        context.fillStyle = \"rgba(\" + this.backgroundColor.r + \",\"  +  this.backgroundColor.g + \",\" + this.backgroundColor.b + \",\" + this.backgroundOpacity + \")\";\n        if(!this.drawCircles) {\n            for(let x = 0; x <= this.resolution.x; x++) {\n                for(let y = 0; y <= this.resolution.y; y++) {\n                    context.clearRect((this.x * this.size.x) + this.borderSize / 2, (this.y * this.size.y) + this.borderSize / 2, this.size.x - this.borderSize, this.size.y - this.borderSize);\n                }\n            }\n        } else if(this.drawCircles) {\n            context.fillRect(0, 0, this.targetCanvasList.width, this.targetCanvasList.height);\n        }\n    }\n\n    /**\n     *\n     * @returns {Promise}\n     */\n    draw() {\n        return new Promise((resolve, reject) => {\n            if(!this.ledMode) {\n                this.targetCanvasList.forEach(context => {\n                    context.clearRect(0, 0, this.targetCanvasList.width, this.targetCanvasList.height);\n                    this.fillCanvas(context);\n                    context.fillStyle = this.pixelColor;\n                });\n            }\n\n            let targetPixelMap;\n\n            if(this.currentPixelArray.length > 0) {\n                targetPixelMap = this.currentPixelArray\n            }\n\n            if(!targetPixelMap) {\n                let image = this.images[this.currentImageIndex];\n                targetPixelMap = this.imageReader.getPixels(image);\n            }\n\n            let targetPixels = this.imageReader.createPixels(targetPixelMap);\n\n            targetPixels.forEach(pixel => {\n                pixel.size = this.pixelSize();\n                pixel.color = this.pixelColor;\n                pixel.drawCircles = this.drawCircles;\n                pixel.borderSize = this.borderSize;\n            });\n            if(this.currentPixels.length > 0) {\n                if(this.ledMode) {\n                    let drawings = [];\n                    this.targetContextList.forEach(ctx => {\n                        drawings.push(this.drawLed(ctx, targetPixels));\n                    });\n                    Promise.all(drawings).then(() => {\n                        this.currentPixels = targetPixels;\n                        resolve();\n                    }).catch();\n                } else {\n                    this.mapPixels(targetPixels, this.targetContextList);\n                    this.movePixels(this.currentPixels, this.targetContextList).then(() => {\n                        resolve();\n                    });\n                }\n            } else {\n                this.targetContextList.forEach(ctx => {\n                    this.drawOnCanvas(targetPixels, ctx);\n                })\n            }\n        });\n    }\n\n    drawLed(context, targetPixels) {\n        return new Promise((resolve, reject) => {\n            context.globalAlpha = 0;\n            let hidePixels = [];\n\n            this.currentPixels.forEach(currentPixel => {\n                hidePixels.push(currentPixel.hide(context, this.duration / 2));\n            });\n\n            Promise.all(hidePixels).then(() => {\n                console.log(\"hidden all pixels\");\n                context.globalAlpha = 1;\n                let showPixels = [];\n                targetPixels.forEach(targetPixel => {\n                    let promise = new Promise((resolve, reject) => {\n                        targetPixel.show(resolve, context, this.duration / 2);\n                    });\n                    showPixels.push(promise);\n                });\n                Promise.all(showPixels).then(() => {\n                    resolve();\n                });\n            });\n        })\n\n    }\n\n    movePixels(pixels, targetContext) {\n\n        return new Promise((resolve, reject) => {\n            if(!this.isFinished) {\n                let roundFinished = true;\n                pixels.forEach(currentPixel => {\n                    currentPixel.moveToTarget();\n                    if(!currentPixel.isSame()) {\n                        roundFinished = false;\n                    }\n                });\n\n                this.isFinished = roundFinished;\n                targetContext.fillStyle = \"rgba(\" + this.backgroundColor.r + \",\"  +  this.backgroundColor.g + \",\" + this.backgroundColor.b + \",\" + this.backgroundOpacity + \")\";\n\n\n                this.fillCanvas(targetContext);\n\n                pixels.forEach(currentPixel => {\n                    currentPixel.drawOnCanvas(targetContext);\n                });\n\n                if(!this.isFinished) {\n                    setTimeout(() => {\n                        this.movePixels(pixels, targetContext)\n                        resolve()\n                    }, this.SPEED);\n                } else {\n                    resolve();\n                }\n            }\n        })\n    }\n\n    drawOnCanvas(pixels, targetContext) {\n        this.currentPixels = pixels;\n        pixels.forEach(pixel => {\n            pixel.drawOnCanvas(targetContext);\n        });\n\n    }\n\n    /**\n     * Setup the new starting state, with exactly as many pixels as the target Image needs.\n     * \n     */\n    mapPixels(targetPixels) {\n\n        let missingPixels = targetPixels.length - this.currentPixels.length;\n\n        if(missingPixels > 0) {\n            for(let i = 0; i < missingPixels; i++) {\n                let element = this.currentPixels[Math.floor(Math.random() * this.currentPixels.length)];\n                let pixel = new Pixel(element.x, element.y, this.borderSize, this.pixelSize(), this.pixelColor, this.drawCircles);\n                this.currentPixels.push(pixel);\n            }\n        } else if (missingPixels < 0) {\n            for(let i = missingPixels; i < 0; i++) {\n                let randomNumber = Math.floor(Math.random() * (this.currentPixels.length - 1 ));\n                this.currentPixels.splice(randomNumber, 1)[0];\n            }\n        }\n\n        this.currentPixels.forEach(currentPixel => {\n            currentPixel.configureTarget(targetPixels.pop());\n        });\n\n        this.currentPixels.forEach(currentPixel => {\n            if(currentPixel.distanceToTarget > this.maxDistance) {\n                this.maxDistance = currentPixel.distanceToTarget;\n            }\n        });\n\n        this.currentPixels.forEach(currentPixel => {\n           currentPixel.setRandomSteps(this.maxDistance);\n        });\n\n    }\n\n    /**\n     * Increase the current ImageIndex, go to 0 if higher then length of IMAGES Array\n     * \n     */\n    changeImage() {\n\n        this.isFinished = false;\n        this.currentImageIndex++;\n        if(this.currentImageIndex >= this.images.length) {\n            this.currentImageIndex = 0;\n        }\n        return this.draw();\n    }\n\n    setNewImage(image) {\n        return new Promise((resolve, reject) => {\n            if(image.length != this.resolution.x && image[0].length != this.resolution.y) {\n                reject(new Error(\"provided array doesnt match resolution of drwr\"));\n            } else {\n                this.currentPixelArray = image;\n                this.draw().then(() => resolve());\n            }\n        })\n\n    }\n\n    pixelSize() {\n        return {\n            x : Math.floor(this.targetCanvasList[0].width / this.resolution.x),\n            y : Math.floor(this.targetCanvasList[0].height / this.resolution.y)\n        }\n    }\n\n    hexToRgb(hex) {\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n        const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        hex = hex.replace(shorthandRegex, function(m, r, g, b) {\n            return r + r + g + g + b + b;\n        });\n\n        let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        } : null;\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./seerow-reader.js","import { Pixel } from './pixel';\n\nexport class ImageReader {\n\n    constructor() {\n\n        this.resolution = { x : 32, y : 32 };\n        this.canv = document.createElement('canvas');\n        this.context = this.canv.getContext('2d');\n        this.context.clearRect(0, 0, this.resolution.x * 10, this.resolution.y * 10);\n        this.canv.id = 'srw-img-canvas';\n        this.canv.style.cssText = 'display:none';\n        document.body.appendChild(this.canv);\n    }\n\n    setOptions(options = {}) {\n\n        if(options.resolution && options.resolution.x &&  options.resolution.y) {\n            this.resolution = options.resolution;\n        }\n\n        if(options.fill) {\n            this.fill = options.fill;\n        }\n\n    }\n\n    getPixels(image) {\n\n        this.context.clearRect(0, 0, this.resolution.x * 10, this.resolution.y * 10);\n        image.crossOrigin = \"Anonymous\";\n        this.context.drawImage(image, 0, 0, this.resolution.x, this.resolution.y);\n        const imageData = this.context.getImageData(0, 0, this.resolution.x, this.resolution.y);\n        let pixels = [];\n        let newPixels = [];\n\n        for(let i = 0; i <= this.resolution.x; i++) {\n            pixels.push([]);\n        }\n        for(let i = 0; i <= this.resolution.y; i++) {\n            newPixels.push([]);\n        }\n\n        for (let i=0; i < imageData.data.length; i += 4) {\n\n            let y = Math.floor(i / (4 * this.resolution.y));\n            let x = 0;\n\n            if(y > 0) {\n                x = Math.floor((i / 4) % (y * this.resolution.x));\n            } else {\n                x = i/4;\n            }\n\n            if(imageData.data[i+3] > 150) {\n                pixels[x][y] = 1;\n            } else {\n                pixels[x][y] = 0;\n            }\n        }\n        return pixels\n    }\n\n    createPixels(pixels) {\n\n        let imagePixels = [];\n        for(let x = 0; x < pixels.length; x++) {\n            for(let y = 0; y < pixels[x].length; y++) {\n                if(!this.fill) {\n                    if(x + 2 >= pixels.length) {\n                        newPixels[x][y] = 0;\n                    } else if(x === 0) {\n                        newPixels[x][y] = 0;\n                    } else if(y === 0) {\n                        newPixels[x][y] = 0;\n                    } else if(y + 2 >= pixels[x].length ) {\n                        newPixels[x][y] = 0;\n                    } else if(pixels[x][y] === 1 &&\n                        (pixels[x - 1][y] === 0 ||\n                        pixels[x + 1][y] === 0||\n                        pixels[x][y + 1] === 0||\n                        pixels[x][y - 1] === 0)) {\n                        var newPixel = new Pixel(x, y);\n                        imagePixels.push(newPixel);\n                    } else {\n                        newPixels[x][y] = 0;\n                    }\n                } else if(pixels[x][y] === 1) {\n                    var newPixel = new Pixel(x, y);\n                    imagePixels.push(newPixel);\n                }\n            }\n        }\n        return imagePixels;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./imageReader.js","import { SeerowReader } from './seerow-reader';\n\n(function(window){\n\n    'use strict';\n\n    function define_library() {\n        let SrwPixelDrawer = {};\n\n        SrwPixelDrawer.create = options => {\n\n            let instance = {};\n\n            let reader = new SeerowReader();\n            reader.setOptions(options);\n\n            instance.options = options => {\n                reader.setOptions(options);\n            };\n            instance.draw = () => {\n                reader.draw();\n            };\n            instance.changeImage = () => {\n                return reader.changeImage();\n            };\n            instance.setNewImage = image => {\n                return reader.setNewImage(image);\n            };\n            return instance;\n        };\n\n        return SrwPixelDrawer;\n    }\n    //define globally if it doesn't already exist\n    if(typeof(SrwPixelDrawer) === 'undefined'){\n        window.SrwPixelDrawer = define_library();\n    } else{\n        console.log(\"SrwPixelDrawer already defined.\");\n    }\n})(window);\n\n\n// WEBPACK FOOTER //\n// ./srw-rdr.js"],"sourceRoot":""}